@page "/fetchdata"
<<<<<<< HEAD
@using ts.Blazor.Shared
=======
@using Microsoft.AspNetCore.Components
@using ts.Domain
@using ts.Domain.Entities
>>>>>>> a906ea0910cc0354a1eaf317acbca740793f1aeb
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<<<<<<< HEAD
@if (forecasts == null)
=======
@if (scopes == null)
>>>>>>> a906ea0910cc0354a1eaf317acbca740793f1aeb
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
<<<<<<< HEAD
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
=======
            @foreach (var forecast in scopes)
            {
                <tr>
                    <td>@forecast.Name</td>
>>>>>>> a906ea0910cc0354a1eaf317acbca740793f1aeb
                </tr>
            }
        </tbody>
    </table>
}

@functions {
<<<<<<< HEAD
    WeatherForecast[] forecasts;

    protected override async Task OnInitAsync()
    {
        forecasts = await Http.GetJsonAsync<WeatherForecast[]>("api/SampleData/WeatherForecasts");
=======
    SecurityScope[] scopes;

    protected override async Task OnInitAsync()
    {
        scopes = await Http.GetJsonAsync<SecurityScope[]>("api/SampleData/WeatherForecasts");
>>>>>>> a906ea0910cc0354a1eaf317acbca740793f1aeb
    }
}
