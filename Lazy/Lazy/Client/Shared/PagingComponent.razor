@using Lazy.Client.Services
@using Lazy.Model
@using Microsoft.AspNetCore.WebUtilities

@inject HttpClient HttpClient
@inject UserSettingsService UserSettings

@code {

    protected async Task<PagedModelResult<T>> GetPageAsync<T>
        (
        string apiUrl,
        int? pageSize,
        int? pageNumber,
        IDictionary<string, string>? queryParams = null)
    {
        var ps = pageSize ?? UserSettings.PageSize;
        var pn = pageNumber is null or  < 0 ? 0 : pageNumber.Value;

        var url = QueryHelpers.AddQueryString(apiUrl,
            new Dictionary<string, string> { { "pageSize", ps.ToString() }, { "pageNumber", pn.ToString() } });

        if (queryParams is not null) url = QueryHelpers.AddQueryString(url, queryParams);

        var pagedResult = await HttpClient.GetFromJsonAsync<PagedModelResult<T>>(url)
                          ?? new PagedModelResult<T>();

        return pagedResult;
    }

}